/* Generated by Yosys 0.33 (git sha1 2584903a060) */

(* src = "ripple_carry_adder_8bit.v:2.1-13.10" *)
module full_adder(a, b, c, sum, co);
  (* src = "ripple_carry_adder_8bit.v:3.17-3.18" *)
  wire _00_;
  (* src = "ripple_carry_adder_8bit.v:4.17-4.18" *)
  wire _01_;
  (* src = "ripple_carry_adder_8bit.v:5.17-5.18" *)
  wire _02_;
  (* src = "ripple_carry_adder_8bit.v:7.17-7.19" *)
  wire _03_;
  (* src = "ripple_carry_adder_8bit.v:6.17-6.20" *)
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  (* src = "ripple_carry_adder_8bit.v:3.17-3.18" *)
  input a;
  wire a;
  (* src = "ripple_carry_adder_8bit.v:4.17-4.18" *)
  input b;
  wire b;
  (* src = "ripple_carry_adder_8bit.v:5.17-5.18" *)
  input c;
  wire c;
  (* src = "ripple_carry_adder_8bit.v:7.17-7.19" *)
  output co;
  wire co;
  (* src = "ripple_carry_adder_8bit.v:6.17-6.20" *)
  output sum;
  wire sum;
  sky130_fd_sc_hd__xor3_1 _10_ (
    .A(_01_),
    .B(_00_),
    .C(_02_),
    .X(_04_)
  );
  sky130_fd_sc_hd__maj3_1 _11_ (
    .A(_01_),
    .B(_00_),
    .C(_02_),
    .X(_03_)
  );
  assign _01_ = b;
  assign _00_ = a;
  assign _02_ = c;
  assign sum = _04_;
  assign co = _03_;
endmodule

(* top =  1  *)
(* src = "ripple_carry_adder_8bit.v:18.1-34.10" *)
module ripple_carry_adder_8bit(A, B, sum);
  (* src = "ripple_carry_adder_8bit.v:18.45-18.46" *)
  input [7:0] A;
  wire [7:0] A;
  (* src = "ripple_carry_adder_8bit.v:18.61-18.62" *)
  input [7:0] B;
  wire [7:0] B;
  (* src = "ripple_carry_adder_8bit.v:20.11-20.17" *)
  wire [7:0] int_co;
  (* src = "ripple_carry_adder_8bit.v:19.12-19.19" *)
  wire [7:0] int_sum;
  (* src = "ripple_carry_adder_8bit.v:18.78-18.81" *)
  output [8:0] sum;
  wire [8:0] sum;
  (* module_not_derived = 32'd1 *)
  (* src = "ripple_carry_adder_8bit.v:25.14-25.84" *)
  full_adder \genblk1[1].u1  (
    .a(A[1]),
    .b(B[1]),
    .c(int_co[0]),
    .co(int_co[1]),
    .sum(int_sum[1])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "ripple_carry_adder_8bit.v:25.14-25.84" *)
  full_adder \genblk1[2].u1  (
    .a(A[2]),
    .b(B[2]),
    .c(int_co[1]),
    .co(int_co[2]),
    .sum(int_sum[2])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "ripple_carry_adder_8bit.v:25.14-25.84" *)
  full_adder \genblk1[3].u1  (
    .a(A[3]),
    .b(B[3]),
    .c(int_co[2]),
    .co(int_co[3]),
    .sum(int_sum[3])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "ripple_carry_adder_8bit.v:25.14-25.84" *)
  full_adder \genblk1[4].u1  (
    .a(A[4]),
    .b(B[4]),
    .c(int_co[3]),
    .co(int_co[4]),
    .sum(int_sum[4])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "ripple_carry_adder_8bit.v:25.14-25.84" *)
  full_adder \genblk1[5].u1  (
    .a(A[5]),
    .b(B[5]),
    .c(int_co[4]),
    .co(int_co[5]),
    .sum(int_sum[5])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "ripple_carry_adder_8bit.v:25.14-25.84" *)
  full_adder \genblk1[6].u1  (
    .a(A[6]),
    .b(B[6]),
    .c(int_co[5]),
    .co(int_co[6]),
    .sum(int_sum[6])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "ripple_carry_adder_8bit.v:25.14-25.84" *)
  full_adder \genblk1[7].u1  (
    .a(A[7]),
    .b(B[7]),
    .c(int_co[6]),
    .co(int_co[7]),
    .sum(int_sum[7])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "ripple_carry_adder_8bit.v:29.12-29.75" *)
  full_adder u2 (
    .a(A[0]),
    .b(B[0]),
    .c(1'h0),
    .co(int_co[0]),
    .sum(int_sum[0])
  );
  assign sum = { int_co[7], int_sum };
endmodule
